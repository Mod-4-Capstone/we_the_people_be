# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: true
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/figaro/all/figaro.rbi
#
# figaro-1.2.0

module Figaro
  def adapter; end
  def adapter=(arg0); end
  def application; end
  def application=(arg0); end
  def env; end
  def load; end
  def require_keys(*keys); end
  extend Figaro
end
class Figaro::Error < StandardError
end
class Figaro::RailsNotInitialized < Figaro::Error
end
class Figaro::MissingKey < Figaro::Error
  def initialize(key); end
end
class Figaro::MissingKeys < Figaro::Error
  def initialize(keys); end
end
module Figaro::ENV
  def extract_key_from_method(method); end
  def get_value(key); end
  def has_key?(key); end
  def method_missing(method, *arg1); end
  def missing_key!(key); end
  def respond_to?(method, *arg1); end
  extend Figaro::ENV
end
class Figaro::Application
  def configuration; end
  def default_environment; end
  def default_path; end
  def each(&block); end
  def environment; end
  def environment=(environment); end
  def environment_configuration; end
  def global_configuration; end
  def initialize(options = nil); end
  def key_skipped!(key); end
  def load; end
  def non_string_configuration!(value); end
  def parse(path); end
  def path; end
  def path=(path); end
  def raw_configuration; end
  def set(key, value); end
  def skip?(key); end
  include Enumerable
end
module Figaro::Rails
end
class Figaro::Rails::Application < Figaro::Application
  def default_environment; end
  def default_path; end
  def rails_not_initialized!; end
end
class Figaro::Rails::Railtie < Rails::Railtie
end
